{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of my Contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-gd0p.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about create users, delete users, update users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of contacts with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "All contact's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "description": "Filter contacts by type",
              "example": "personal"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "description": "Filter contacts by favourite status",
            "example": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "contacts",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "500": {
              "description": "Internal server error.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 500
                      },
                      "message": {
                        "type": "string",
                        "example": "Bad request"
                      }
                    }
                  }
                }
              }
            },
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "Alex Johnson"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "+14155552671"
                  },
                  "email": {
                    "description": "Contact's email address",
                    "type": "string",
                    "example": "alex.johnson@example.com"
                  },
                  "isFavourite": {
                    "description": "Indicates whether the contact is marked as a favorite.",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Specifies the category the contact belongs to.",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  },
                  "photo": {
                    "description": "Link to contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201,
                      "description": "HTTP status code indicating successful creation."
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!",
                      "description": "Confirmation message of successful contact creation."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65cart65o87f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65cart65o87f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404contacts"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact by id",
        "operationId": "updateContact",
        "description": "Update the contact with the specified ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65cart65o87f10c88b598395"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "Alex Johnson"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "+14155552671"
                  },
                  "email": {
                    "description": "Contact's email address",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "isFavourite": {
                    "description": "Indicates whether the contact is marked as a favorite.",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Specifies the category the contact belongs to.",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "photo": {
                    "description": "Link to contact's photo",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully contact updated with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404contacts"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete the contact with the specified ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204,
                      "description": "The HTTP status code indicating successful deletion with no content."
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact successfully deleted.",
                      "description": "A message confirming that the contact was deleted successfully."
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404contacts"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Replace contact by id",
        "operationId": "replaceContact",
        "description": "Replace the contact with the specified ID. This operation will update all fields of the contact, and any missing fields will be removed or reset to default values.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65cart65o87f10c88b598395"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "isFavourite",
                  "contactType",
                  "userId",
                  "photo"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Alex Johnson",
                    "description": "Contact's name"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+342001112343",
                    "description": "Contact's phone number"
                  },
                  "email": {
                    "type": "string",
                    "example": "examle@mail.com",
                    "description": "Contact's email address"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether the contact is marked as a favorite."
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal",
                    "description": "Specifies the category the contact belongs to."
                  },
                  "photo": {
                    "type": "string",
                    "description": "Link to contact's photo",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully contact replaced",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully contact replaced with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404contacts"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "email",
          "contactType -userId"
        ],
        "properties": {
          "_id": {
            "description": "Student's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Student's name",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "description": "Contact's email address",
            "type": "string",
            "example": "john.doe@example.com"
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Whether the contact is marked as favorite",
            "example": false
          },
          "contactType": {
            "type": "string",
            "description": "Type of contact",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who created the contact",
            "example": "65e4decdd286b30065d54af9"
          },
          "photo": {
            "description": "Link to contacts's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error. This error occurs when the server encounters an unexpected condition that prevents it from fulfilling the request. It can be caused by issues such as server misconfiguration, unhandled exceptions in the application code, or problems with external services.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500,
                  "description": "HTTP status code indicating an internal server error."
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error.",
                  "description": "A generic message indicating that the server encountered an unexpected error."
                },
                "errorCode": {
                  "type": "string",
                  "example": "SERVER_ERROR",
                  "description": "A specific error code to help identify the nature of the internal issue."
                },
                "method": {
                  "type": "string",
                  "example": "POST",
                  "description": "The HTTP method used when the error occurred."
                }
              }
            }
          }
        }
      },
      "404contacts": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404,
                  "description": "HTTP status code indicating that the contact was not found."
                },
                "message": {
                  "type": "string",
                  "example": "Contact with contactId not found",
                  "description": "Description of the error, specifying that the contact could not be found."
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact with contactId not found",
                      "description": "A message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}